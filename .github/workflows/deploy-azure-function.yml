name: Deploy as Azure Function App
on:
  workflow_dispatch:

jobs:
  # test:
  #   uses: ./.github/workflows/ci.yml

  deploy-infrastructure:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure
    # needs: test
    outputs:
      resource-group: ${{ steps.apply.outputs.rg_name }}
      function-app-name: ${{ steps.apply.outputs.function_app_name }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_telegram_chat_id: ${{secrets.TELEGRAM_CHAT_ID}}
      TF_VAR_telegram_token: ${{secrets.TELEGRAM_TOKEN}}
      TF_VAR_email_alert_recipient: ${{secrets.AZURE_EMAIL_ALERT_RECIPIENT}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Select Workspace
        id: select
        run: terraform workspace select fresh

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false

      - name: Terraform Refresh
        id: refresh
        run: terraform refresh

      # - name: Terraform Apply
      #   id: apply
      #   # run: terraform apply -auto-approve -input=false
      #   run: |
      #     terraform apply -auto-approve -input=false
      #     echo "rg_name=$(terraform output rg_name)" >> $GITHUB_OUTPUT
      #     echo "function_app_name=$(terraform output function_app_name)" >> $GITHUB_OUTPUT

      - name: Terraform Output
        id: output
        run: |
          echo "rg_name=$(terraform output -raw rg_name)" >> $GITHUB_OUTPUT
          echo "function_app_name=$(terraform output -raw function_app_name)" >> $GITHUB_OUTPUT

  test-az-cli:
    runs-on: ubuntu-latest
    needs: [test, deploy-infrastructure]
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3

      - name: "Test Azure CLI"
        uses: azure/login@v1

      - name: Testing
        id: testing
        run:
          $(az functionapp show --resource-group ${{needs.deploy-infrastructure.outputs.resource-group}} --name
          ${{needs.deploy-infrastructure.outputs.function-app-name}} --query "siteConfig.linuxFxVersion")

  # build-and-deploy:
  #   runs-on: ubuntu-latest
  #   needs: [test, deploy-infrastructure]
  #   env:
  #     # AZURE_FUNCTIONAPP_NAME: func-seat-stalker
  #     PACKAGE_DIRECTORY: "./azure-functions"
  #     JAVA_VERSION: "17"
  #   steps:
  #     - name: "Checkout GitHub Action"
  #       uses: actions/checkout@v3

  #     - name: Setup JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: temurin
  #         java-version: ${{ env.JAVA_VERSION }}

  #     - name: Build JAR
  #       run: sbt -v assembly

  #     - name: Deploy to Azure
  #       uses: Azure/functions-action@v1
  #       with:
  #         app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
  #         package: ${{ env.PACKAGE_DIRECTORY }}
  #         # publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
  #         publish-profile:
  #           $(az functionapp deployment list-publishing-profiles --resource-group
  #           ${{needs.deploy-infrastructure.outputs.resource-group}} --name
  #           ${{needs.deploy-infrastructure.outputs.function-app-name}} --xml)
